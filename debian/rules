#!/usr/bin/make -f

CPPFLAGS:=$(shell dpkg-buildflags --get CPPFLAGS)
CFLAGS:=$(shell dpkg-buildflags --get CFLAGS)
LDFLAGS:=$(shell dpkg-buildflags --get LDFLAGS)
API_ROOT_DIR=INCHI_API
LIB_DIR=$(CURDIR)/debian/results
DEST_LIB_DIR=$(CURDIR)/debian/tmp/usr/lib/$(shell dpkg-architecture -q DEB_HOST_GNU_TYPE)
DEST_INCLUDE_DIR=$(CURDIR)/debian/tmp/usr/include

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
else
NUMJOBS=1
endif

%:
	dh $@ --parallel

override_dh_auto_clean:
	rm -rf $(LIB_DIR)
	rm -f $(wildcard $(API_ROOT_DIR)/gcc_so_makefile/*.o)

override_dh_auto_build:
	mkdir -p $(LIB_DIR)
	$(MAKE) -j$(NUMJOBS) ISLINUX=1 -C $(API_ROOT_DIR)/gcc_so_makefile \
		C_COMPILER=$(CC) C_OPTIONS="-c $(CPPFLAGS) $(CFLAGS)" \
		C_MAIN_OPTIONS=-DBUILD_LINK_AS_DLL C_SO_OPTIONS=-fPIC \
		LINKER="$(CC) -s $(LDFLAGS)" \
		SHARED_LINK="$(CC) -shared" SHARED_LINK_PARM=$(LDFLAGS) \
		LIB_DIR=$(LIB_DIR)

override_dh_auto_install:
	install -d $(DEST_LIB_DIR) $(DEST_INCLUDE_DIR)
	install -t $(DEST_LIB_DIR) -m 644 $(LIB_DIR)/$(shell readlink $(LIB_DIR)/libinchi.so.1)
	cp -dt $(DEST_LIB_DIR) $(LIB_DIR)/libinchi.so.1
	install -t $(DEST_INCLUDE_DIR) $(API_ROOT_DIR)/inchi_main/inchi_api.h
	ln -s libinchi.so.1 $(DEST_LIB_DIR)/libinchi.so
